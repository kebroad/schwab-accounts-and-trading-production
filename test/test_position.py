# coding: utf-8

"""
    Trader API - Account Access and User Preferences

    Schwab Trader API access to Account, Order entry and User Preferences

    The version of the OpenAPI document: 1.0.0
    Contact: TraderAPI@Schwab.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.position import Position

class TestPosition(unittest.TestCase):
    """Position unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Position:
        """Test Position
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Position`
        """
        model = Position()
        if include_optional:
            return Position(
                short_quantity = 1.337,
                average_price = 1.337,
                current_day_profit_loss = 1.337,
                current_day_profit_loss_percentage = 1.337,
                long_quantity = 1.337,
                settled_long_quantity = 1.337,
                settled_short_quantity = 1.337,
                aged_quantity = 1.337,
                instrument = None,
                market_value = 1.337,
                maintenance_requirement = 1.337,
                average_long_price = 1.337,
                average_short_price = 1.337,
                tax_lot_average_long_price = 1.337,
                tax_lot_average_short_price = 1.337,
                long_open_profit_loss = 1.337,
                short_open_profit_loss = 1.337,
                previous_session_long_quantity = 1.337,
                previous_session_short_quantity = 1.337,
                current_day_cost = 1.337
            )
        else:
            return Position(
        )
        """

    def testPosition(self):
        """Test Position"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
