# coding: utf-8

"""
    Trader API - Account Access and User Preferences

    Schwab Trader API access to Account, Order entry and User Preferences

    The version of the OpenAPI document: 1.0.0
    Contact: TraderAPI@Schwab.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_validation_result import OrderValidationResult

class TestOrderValidationResult(unittest.TestCase):
    """OrderValidationResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderValidationResult:
        """Test OrderValidationResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderValidationResult`
        """
        model = OrderValidationResult()
        if include_optional:
            return OrderValidationResult(
                alerts = [
                    openapi_client.models.order_validation_detail.OrderValidationDetail(
                        validation_rule_name = '', 
                        message = '', 
                        activity_message = '', 
                        original_severity = 'ACCEPT', 
                        override_name = '', 
                        override_severity = 'ACCEPT', )
                    ],
                accepts = [
                    openapi_client.models.order_validation_detail.OrderValidationDetail(
                        validation_rule_name = '', 
                        message = '', 
                        activity_message = '', 
                        original_severity = 'ACCEPT', 
                        override_name = '', 
                        override_severity = 'ACCEPT', )
                    ],
                rejects = [
                    openapi_client.models.order_validation_detail.OrderValidationDetail(
                        validation_rule_name = '', 
                        message = '', 
                        activity_message = '', 
                        original_severity = 'ACCEPT', 
                        override_name = '', 
                        override_severity = 'ACCEPT', )
                    ],
                reviews = [
                    openapi_client.models.order_validation_detail.OrderValidationDetail(
                        validation_rule_name = '', 
                        message = '', 
                        activity_message = '', 
                        original_severity = 'ACCEPT', 
                        override_name = '', 
                        override_severity = 'ACCEPT', )
                    ],
                warns = [
                    openapi_client.models.order_validation_detail.OrderValidationDetail(
                        validation_rule_name = '', 
                        message = '', 
                        activity_message = '', 
                        original_severity = 'ACCEPT', 
                        override_name = '', 
                        override_severity = 'ACCEPT', )
                    ]
            )
        else:
            return OrderValidationResult(
        )
        """

    def testOrderValidationResult(self):
        """Test OrderValidationResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
