# coding: utf-8

"""
    Trader API - Account Access and User Preferences

    Schwab Trader API access to Account, Order entry and User Preferences

    The version of the OpenAPI document: 1.0.0
    Contact: TraderAPI@Schwab.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_preference import UserPreference

class TestUserPreference(unittest.TestCase):
    """UserPreference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserPreference:
        """Test UserPreference
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserPreference`
        """
        model = UserPreference()
        if include_optional:
            return UserPreference(
                accounts = [
                    openapi_client.models.user_preference_account.UserPreferenceAccount(
                        account_number = '', 
                        primary_account = True, 
                        type = '', 
                        nick_name = '', 
                        account_color = '', 
                        display_acct_id = '', 
                        auto_position_effect = True, )
                    ],
                streamer_info = [
                    openapi_client.models.streamer_info.StreamerInfo(
                        streamer_socket_url = '', 
                        schwab_client_customer_id = '', 
                        schwab_client_correl_id = '', 
                        schwab_client_channel = '', 
                        schwab_client_function_id = '', )
                    ],
                offers = [
                    openapi_client.models.offer.Offer(
                        level2_permissions = True, 
                        mkt_data_permission = '', )
                    ]
            )
        else:
            return UserPreference(
        )
        """

    def testUserPreference(self):
        """Test UserPreference"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
