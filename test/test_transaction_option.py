# coding: utf-8

"""
    Trader API - Account Access and User Preferences

    Schwab Trader API access to Account, Order entry and User Preferences

    The version of the OpenAPI document: 1.0.0
    Contact: TraderAPI@Schwab.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transaction_option import TransactionOption

class TestTransactionOption(unittest.TestCase):
    """TransactionOption unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransactionOption:
        """Test TransactionOption
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransactionOption`
        """
        model = TransactionOption()
        if include_optional:
            return TransactionOption(
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                option_deliverables = [
                    openapi_client.models.transaction_api_option_deliverable.TransactionAPIOptionDeliverable(
                        root_symbol = '', 
                        strike_percent = 56, 
                        deliverable_number = 56, 
                        deliverable_units = 1.337, 
                        deliverable = null, 
                        asset_type = 'EQUITY', )
                    ],
                option_premium_multiplier = 56,
                put_call = 'PUT',
                strike_price = 1.337,
                type = 'VANILLA',
                underlying_symbol = '',
                underlying_cusip = '',
                deliverable = None,
                asset_type = 'EQUITY',
                cusip = '',
                symbol = '',
                description = '',
                instrument_id = 56,
                net_change = 1.337
            )
        else:
            return TransactionOption(
                asset_type = 'EQUITY',
        )
        """

    def testTransactionOption(self):
        """Test TransactionOption"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
